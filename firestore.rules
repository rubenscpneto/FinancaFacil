rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection
    // Users can read and update their own profile.
    // Creating a user profile might be handled server-side or client-side upon first login.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // Allow create if the user is authenticated and the document ID matches their UID.
      // This allows a user to create their own profile document after signing up.
      allow create: if request.auth != null && request.auth.uid == userId;
      // Deny delete for user profiles for now, or add specific admin role check if needed.
      allow delete: if false;
    }

    // Categories: User-owned data
    match /categories/{categoryId} {
      allow read, delete: if isOwner(resource.data.userId);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId; // Ensure userId is not changed
    }

    // Transactions: User-owned data
    match /transactions/{transactionId} {
      allow read, delete: if isOwner(resource.data.userId);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId; // Ensure userId is not changed
    }

    // Budgets: User-owned data
    match /budgets/{budgetId} {
      allow read, delete: if isOwner(resource.data.userId);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId; // Ensure userId is not changed
    }

    // SavingsGoals: User-owned data
    match /savingsGoals/{goalId} {
      allow read, delete: if isOwner(resource.data.userId);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId; // Ensure userId is not changed
    }

    // Default deny all other paths / collections unless explicitly allowed above
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 